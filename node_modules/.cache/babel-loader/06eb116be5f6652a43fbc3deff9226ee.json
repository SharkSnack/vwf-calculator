{"ast":null,"code":"var _jsxFileName = \"/Users/tay/Sites/vwf-calculator/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport shiren2Widths from './json/shiren2.json';\nimport shiren4Widths from './json/shiren4.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Preview extends React.Component {\n  renderPreview() {\n    let html = []; // Shiren 4+ (PSP)\n\n    if (this.props.game === 'shiren4') {\n      for (const char of this.props.text) {\n        if (char === '\\n') {\n          html.push(`<br/>`); // Lines after the first have 4 spaces of indentation\n\n          for (let i = 0; i < 4; i++) {\n            html.push(`<img class=\"glyph\" src=\"./font/shiren4/32.png\" />`);\n          }\n        } else {\n          html.push(`<img class=\"glyph\" src=\"./font/shiren4/${char.charCodeAt(0)}.png\" />`);\n        }\n      }\n    }\n\n    return html.join('\\n');\n  }\n\n  render() {\n    if (this.props.game === 'shiren4') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Preview:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"shiren4Preview\",\n          dangerouslySetInnerHTML: {\n            __html: this.renderPreview()\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this);\n    } else {\n      return null;\n    }\n  }\n\n}\n\nclass VWFCalc extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      game: \"\",\n      textArea: \"\",\n      charCount: 0,\n      lookupObj: {},\n      widths: []\n    };\n  }\n\n  handlePresetClick(game) {\n    let lookupObj = {};\n\n    switch (game) {\n      case 'shiren2':\n        lookupObj = shiren2Widths;\n        break;\n\n      case 'shiren4':\n        lookupObj = shiren4Widths;\n        break;\n\n      default: // empty object\n\n    }\n\n    this.setState({\n      game: game,\n      lookupObj: lookupObj\n    });\n  }\n\n  handleFileUpload(event) {\n    const reader = new FileReader();\n    reader.readAsText(event.target.files[0], \"UTF-8\");\n\n    reader.onload = e => {\n      try {\n        this.setState({\n          lookupObj: JSON.parse(e.target.result)\n        });\n      } catch (e) {\n        alert(\"Error parsing widths file.\\n\\nIs it in JSON format?\");\n      }\n    };\n\n    this.setState({\n      game: \"\"\n    });\n  }\n\n  handleTextAreaChange(event) {\n    function calcLineWidth(game, lookupObj, line) {\n      let width = 0;\n\n      if (game === 'shiren2') {\n        width = 4; // starts with 4 pixels padding\n\n        for (const char of line) {\n          width += lookupObj[char] + 2; // 2 pixels between each character\n        }\n\n        width -= 2; // last character doesn't have 2 pixels padding\n      } else {\n        for (const char of line) {\n          width += lookupObj[char];\n        }\n      }\n\n      return width;\n    } // recalculate widths\n\n\n    let lines = event.target.value.split('\\n');\n    let widths = [];\n\n    for (const line of lines) {\n      widths.push(calcLineWidth(this.state.game, this.state.lookupObj, line));\n    } // color widths that are too long\n\n\n    for (const width of widths) {\n      console.log(width);\n      console.log(widths[width]);\n\n      if (width > this.state.lookupObj[\"_window\"]) {}\n    }\n\n    this.setState({\n      textArea: event.target.value,\n      charCount: event.target.value.length,\n      widths: widths\n    });\n  }\n\n  render() {\n    const game = this.state.game;\n    const text = this.state.textArea;\n    const charCount = this.state.charCount;\n    const widths = this.state.widths.join('\\n');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"- Variable Width Font Calculator (v1.0) -\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Preset: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.handlePresetClick(\"shiren2\"),\n        children: \"Shiren 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.handlePresetClick(\"shiren4\"),\n        children: \"Shiren 4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Custom: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => this.handleFileUpload(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        cols: \"56\",\n        rows: \"10\",\n        onChange: e => this.handleTextAreaChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Preview, {\n        text: text,\n        game: game\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Result (\", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: charCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 20\n        }, this), \" chars):\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        className: \"widthResult\",\n        children: widths\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(VWFCalc, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 157,\n  columnNumber: 3\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["/Users/tay/Sites/vwf-calculator/src/index.js"],"names":["React","ReactDOM","shiren2Widths","shiren4Widths","Preview","Component","renderPreview","html","props","game","char","text","push","i","charCodeAt","join","render","__html","VWFCalc","constructor","state","textArea","charCount","lookupObj","widths","handlePresetClick","setState","handleFileUpload","event","reader","FileReader","readAsText","target","files","onload","e","JSON","parse","result","alert","handleTextAreaChange","calcLineWidth","line","width","lines","value","split","console","log","length","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport shiren2Widths from './json/shiren2.json';\nimport shiren4Widths from './json/shiren4.json';\n\nclass Preview extends React.Component {\n  renderPreview() {\n    let html = [];\n\n    // Shiren 4+ (PSP)\n    if (this.props.game === 'shiren4') {\n      for (const char of this.props.text) {\n        if (char === '\\n') {\n          html.push(`<br/>`);\n          // Lines after the first have 4 spaces of indentation\n          for (let i = 0; i < 4; i++) {\n            html.push(`<img class=\"glyph\" src=\"./font/shiren4/32.png\" />`);\n          }\n        } else {\n          html.push(`<img class=\"glyph\" src=\"./font/shiren4/${char.charCodeAt(0)}.png\" />`);\n        }\n      }\n    }\n\n    return html.join('\\n');\n  }\n\n  render() {\n    if (this.props.game === 'shiren4') {\n      return(\n        <div>\n          <p>Preview:</p>\n          <div className=\"shiren4Preview\" dangerouslySetInnerHTML={{__html: this.renderPreview()}}></div>\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nclass VWFCalc extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      game: \"\",\n      textArea: \"\",\n      charCount: 0,\n      lookupObj: {},\n      widths: []\n    }\n  }\n\n  handlePresetClick(game) {\n    let lookupObj = {};\n    switch(game) {\n      case 'shiren2':\n        lookupObj = shiren2Widths;\n        break;\n      case 'shiren4':\n        lookupObj = shiren4Widths;\n        break;\n      default:\n        // empty object\n    }\n    this.setState({\n      game: game,\n      lookupObj: lookupObj\n    });\n  }\n\n  handleFileUpload(event) {\n    const reader = new FileReader();\n    reader.readAsText(event.target.files[0], \"UTF-8\");\n    reader.onload = e => {\n      try {\n        this.setState({\n          lookupObj: JSON.parse(e.target.result)\n        });\n      } catch(e) {\n        alert(\"Error parsing widths file.\\n\\nIs it in JSON format?\");\n      }\n    }\n    this.setState({\n      game: \"\"\n    });\n  }\n\n  handleTextAreaChange(event) {\n\n    function calcLineWidth(game, lookupObj, line) {\n      let width = 0;\n      if (game === 'shiren2') {\n        width = 4; // starts with 4 pixels padding\n        for (const char of line) {\n          width += lookupObj[char] + 2; // 2 pixels between each character\n        }\n        width -= 2; // last character doesn't have 2 pixels padding\n      } else {\n        for (const char of line) {\n          width += lookupObj[char];\n        }\n      }\n      return width;\n    }\n    // recalculate widths\n    let lines = event.target.value.split('\\n');\n    let widths = [];\n\n    for (const line of lines) {\n      widths.push( calcLineWidth(this.state.game, this.state.lookupObj, line) );\n    }\n    // color widths that are too long\n    for (const width of widths) {\n      console.log(width);\n      console.log(widths[width]);\n      if (width > this.state.lookupObj[\"_window\"]) {\n        \n      }\n    }\n    this.setState({\n      textArea: event.target.value,\n      charCount: event.target.value.length,\n      widths: widths\n    });\n  }\n\n  render() {\n    const game = this.state.game;\n    const text = this.state.textArea;\n    const charCount = this.state.charCount;\n    const widths = this.state.widths.join('\\n');\n\n    return (\n      <div>\n        <h4>- Variable Width Font Calculator (v1.0) -</h4>\n        <span>Preset: </span>\n          <button onClick={() => this.handlePresetClick(\"shiren2\")}>Shiren 2</button>\n          <button onClick={() => this.handlePresetClick(\"shiren4\")}>Shiren 4</button>\n          <br/>\n        <span>Custom: </span>\n          <input type=\"file\" onChange={(e) => this.handleFileUpload(e)}></input>\n          <br/>\n          <br/>\n        <textarea cols=\"56\" rows=\"10\" onChange={(e) => this.handleTextAreaChange(e)}></textarea>\n        <br/>\n        <Preview text={text} game={game}/>\n        <p>Result (<span>{charCount}</span> chars):</p>\n        <pre className=\"widthResult\">{widths}</pre>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <VWFCalc />,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}